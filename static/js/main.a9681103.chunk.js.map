{"version":3,"sources":["components/create.component.js","components/edit.component.js","components/TableRow.js","components/index.component.js","components/sendemail.component.js","App.js","serviceWorker.js","index.js"],"names":["Create","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangePersonName","bind","assertThisInitialized","onChangeBusinessName","onChangeGstNumber","onSubmit","state","person_name","business_name","business_gst_number","e","setState","target","value","preventDefault","obj","axios","post","then","res","console","log","data","react_default","a","createElement","style","marginTop","className","type","onChange","Component","Edit","_this2","get","match","params","id","response","catch","err","history","push","window","location","reload","align","TableRow","onDelete","_id","Link","to","onClick","Index","business","map","object","i","components_TableRow","key","colSpan","tabRow","SendEmail","onChangeSenderName","onChangeSenderEmailPasswd","onChangeReceiverName","onChangeSubject","onChangeContents","sender_name","sender_email_passwd","receiver_name","subject","contents","alert","App","BrowserRouter","Switch","Route","expect","path","component","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9681103.chunk.js","sourcesContent":["// create.component.js\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Create extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangePersonName = this.onChangePersonName.bind(this);\r\n        this.onChangeBusinessName = this.onChangeBusinessName.bind(this);\r\n        this.onChangeGstNumber = this.onChangeGstNumber.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n        this.state = {\r\n            person_name: '',\r\n            business_name: '',\r\n            business_gst_number: ''\r\n        }\r\n    }\r\n    onChangePersonName(e) {\r\n        this.setState({\r\n            person_name: e.target.value\r\n        });\r\n    }\r\n        onChangeBusinessName(e){\r\n        this.setState({\r\n            business_name: e.target.value\r\n        });\r\n    }\r\n    onChangeGstNumber(e) {\r\n        this.setState({\r\n            business_gst_number: e.target.value\r\n        });\r\n    }\r\n    \r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        const obj = {\r\n            person_name: this.state.person_name,\r\n            business_name: this.state.business_name,\r\n            business_gst_number: this.state.business_gst_number\r\n        };\r\n        axios.post('http://localhost:4000/business/add', obj)\r\n            .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            person_name: '',\r\n            business_name: '',\r\n            business_gst_number: ''\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3>Add New Business</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Person Name: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.person_name} onChange={this.onChangePersonName}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Business Name: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.business_name} onChange={this.onChangeBusinessName}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Add GST Number: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.business_gst_number} onChange={this.onChangeGstNumber}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Register Business\" className=\"btn btn-primary\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// edit.component.js\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Edit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangePersonName = this.onChangePersonName.bind(this);\r\n        this.onChangeBusinessName = this.onChangeBusinessName.bind(this);\r\n        this.onChangeGstNumber = this.onChangeGstNumber.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            person_name: '',\r\n            business_name: '',\r\n            business_gst_number: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/business/edit/'+this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    person_name: response.data.person_name,\r\n                    business_name: response.data.business_name,\r\n                    business_gst_number: response.data.business_gst_number\r\n                });\r\n            })\r\n            .catch(function (err) {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    onChangePersonName(e) {\r\n        this.setState({\r\n            person_name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeBusinessName(e) {\r\n        this.setState({\r\n            business_name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeGstNumber(e) {\r\n        this.setState({\r\n            business_gst_number: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const obj = {\r\n            person_name: this.state.person_name,\r\n            business_name: this.state.business_name,\r\n            business_gst_number: this.state.business_gst_number\r\n        };\r\n        axios.post('http://localhost:4000/business/update/'+this.props.match.params.id, obj)\r\n            .then(res => console.log(res.data));\r\n        \r\n        this.props.history.push('/index');\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 10}}>\r\n                <h3 align=\"center\">Update Business</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Person Name: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.person_name} onChange={this.onChangePersonName} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Business Name: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.business_name} onChange={this.onChangeBusinessName} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>GST Number: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.business_gst_number} onChange={this.onChangeGstNumber} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Update Business\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// TableRow.js\r\n\r\nimport React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass TableRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onDelete = this.onDelete.bind(this);\r\n    }\r\n\r\n    onDelete() {\r\n        axios.get('http://localhost:4000/business/delete/'+this.props.obj._id)\r\n            .then(console.log('Deleted'))\r\n            .catch(err => console.log(err))\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    {this.props.obj.person_name}\r\n                </td>\r\n                <td>\r\n                    {this.props.obj.business_name}\r\n                </td>\r\n                <td>\r\n                    {this.props.obj.business_gst_number}\r\n                </td>\r\n                <td>\r\n                    <Link to={\"/edit/\"+this.props.obj._id} className=\"btn btn-primary\">Edit</Link>\r\n                </td>\r\n                <td>\r\n                    <button onClick={this.onDelete} className=\"btn btn-danger\">Delete</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableRow;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport TableRow from './TableRow';\r\n\r\nexport default class Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {business: []};\r\n    }\r\n    \r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/business')\r\n            .then(response => {\r\n                this.setState({business: response.data});\r\n            })\r\n            .catch(function(err) {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    tabRow() {\r\n        return this.state.business.map(function(object, i) {\r\n            return <TableRow obj={object} key={i} />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 align=\"center\">Business List</h3>\r\n                <table className=\"table table-striped\" style={{marginTop: 20}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Person</th>\r\n                            <th>Business</th>\r\n                            <th>GST Number</th>\r\n                            <th colSpan=\"2\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.tabRow()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// sendemail.component.js\r\n\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class SendEmail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeSenderName = this.onChangeSenderName.bind(this);\r\n        this.onChangeSenderEmailPasswd = this.onChangeSenderEmailPasswd.bind(this);\r\n        this.onChangeReceiverName = this.onChangeReceiverName.bind(this);\r\n        this.onChangeSubject = this.onChangeSubject.bind(this);\r\n        this.onChangeContents = this.onChangeContents.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            sender_name: '',\r\n            sender_email_passwd: '',\r\n            receiver_name: '',\r\n            subject: '',\r\n            contents: ''\r\n        }\r\n    }\r\n\r\n    onChangeSenderName(e) {\r\n        this.setState({\r\n            sender_name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeSenderEmailPasswd(e) {\r\n        this.setState({\r\n            sender_email_passwd: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeReceiverName(e) {\r\n        this.setState({\r\n            receiver_name: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeSubject(e) {\r\n        this.setState({\r\n            subject: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeContents(e) {\r\n        this.setState({\r\n            contents: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const obj = {\r\n            sender_name: this.state.sender_name,\r\n            sender_email_passwd: this.state.sender_email_passwd,\r\n            receiver_name: this.state.receiver_name,\r\n            subject: this.state.subject,\r\n            contents: this.state.contents\r\n        }\r\n        axios.post('http://localhost:4000/business/sendemail', obj)\r\n            .then(res => console.log(res.data))\r\n            .catch(function (err) {\r\n                alert(err);\r\n            })\r\n        this.setState({\r\n            sender_name: '',\r\n            sender_email_passwd: '',\r\n            receiver_name: '',\r\n            subject: '',\r\n            contents: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 20}}>\r\n                <h3>Send Email</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Sender Email Address: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.sender_name} onChange={this.onChangeSenderName} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Sender Email Password: </label>\r\n                        <input type=\"password\" className=\"form-control\" value={this.state.sender_email_passwd} onChange={this.onChangeSenderEmailPasswd} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Receiver Email Address: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.receiver_name} onChange={this.onChangeReceiverName} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Subject: </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.subject} onChange={this.onChangeSubject} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Contents: </label>\r\n                        <textarea type=\"text\" className=\"form-control\" value={this.state.contents} onChange={this.onChangeContents} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Send\" className=\"btn btn-primary\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport Create from './components/create.component';\r\nimport Edit from './components/edit.component';\r\nimport Index from './components/index.component';\r\nimport SendEmail from './components/sendemail.component';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"container\">\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link to={'/'} className=\"navbar-brand\">React CRUD Example</Link>\r\n            <nav className=\"navbar navbar-expand-sm bg-primary navbar-dark\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/'} className=\"nav-link\">Home</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/create'} className=\"nav-link\">Create</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/index'} className=\"nav-link\">Index</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to={'/sendemail'} className=\"nav-link\">SendEmail</Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </nav> <br/>\r\n          <h2>Welcome to React CRUD Tutorial</h2> <br/>\r\n          <Switch>\r\n            <Route expect path='/create' component= { Create } />\r\n            <Route expect path='/edit/:id' component={ Edit } />\r\n            <Route expect path='/index' component={ Index } />\r\n            <Route expect path='/sendemail' component={ SendEmail } />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}